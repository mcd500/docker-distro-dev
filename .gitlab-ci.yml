variables:
    REPO: aistcpsec/tee-distro-dev

stages:
    - build
    - trigger

before_script:
    - docker login -u ${DOCKERHUB_USER} -p ${DOCKERHUB_PASSWD}

rootfs-riscv-debian-sid:
    tags:
        - fast-shells
    stage: build
    script:
        - docker build --rm -t ${REPO}:rootfs-riscv-debian-sid ./riscv/rootfs-debian-sid
        - docker run --privileged --rm
            -v $(pwd)/riscv/rootfs-debian-sid:/mnt ${REPO}:rootfs-riscv-debian-sid
            /bin/bash -c "/mnt/gen-debian.sh"
        - docker push ${REPO}:rootfs-riscv-debian-sid

rootfs-riscv-ubuntu-20.04:
    tags:
        - fast-shells
    stage: build
    script:
        - docker build --rm -t ${REPO}:rootfs-riscv-ubuntu-20.04 ./riscv/rootfs-ubuntu-20.04
        - docker run --privileged --rm
            -v $(pwd)/riscv/rootfs-ubuntu-20.04:/mnt ${REPO}:rootfs-riscv-ubuntu-20.04
            /bin/bash -c "/mnt/gen-ubuntu-2004.sh"
        - docker push ${REPO}:rootfs-riscv-ubuntu-20.04

rootfs-arm64-ubuntu-20.04:
    variables:
         ROOTFS_FILE: arm64-20.04-rootfs.tar.xz
         CONT_NAME: rootfs-arm64-container
         CONT_NAME_TAR: rootfs-arm64-container-1
         ROOTFS_TAR_REPO: rootfs-arm64-ubuntu-20.04-tar
    tags:
        - fast-shells
    stage: build
    script:
        - docker build --rm -t ${REPO}:rootfs-arm64-ubuntu-20.04 ./arm64/rootfs-ubuntu-20.04
        - docker push ${REPO}:rootfs-arm64-ubuntu-20.04
        # Stop and Remove the container before running it.
        - for i in {1..5}; do docker stop $CONT_NAME || true; done
        - docker rm $CONT_NAME || true
        # Start the container and execute the bash script
        - docker run --privileged --name $CONT_NAME
            -v $(pwd)/arm64/rootfs-ubuntu-20.04:/mnt ${REPO}:rootfs-arm64-ubuntu-20.04
            /bin/bash -c "/mnt/gen-ubuntu-2004.sh"
        # - docker cp $CONT_NAME:/mnt/${ROOTFS_FILE} $CI_PROJECT_DIR/${ROOTFS_FILE}
        # Stop and remove the container after running it.
        - for i in {1..5}; do docker stop $CONT_NAME || true; done
        - docker rm $CONT_NAME || true
         # Stop and Remove the container before running it.
        - for i in {1..5}; do docker stop $CONT_NAME_TAR || true; done
        - docker rm $CONT_NAME_TAR || true
        # Start the new container
        - docker run --privileged --name $CONT_NAME_TAR -itd
            -v $(pwd)/arm64/rootfs-ubuntu-20.04:/mnt/ ${REPO}:rootfs-arm64-ubuntu-20.04
        # copy the rootfs tar file inside the new container
        - docker exec $CONT_NAME_TAR cp /mnt/${ROOTFS_FILE} /
        # Commit the container into new image and push it
        - docker commit $CONT_NAME_TAR ${REPO}:${ROOTFS_TAR_REPO}
        - docker push ${REPO}:${ROOTFS_TAR_REPO}
        # Stop and remove the container after running it.
        - for i in {1..5}; do docker stop $CONT_NAME_TAR || true; done
        - docker rm $CONT_NAME_TAR || true

tee-distro-dev-doxygen_20.04:
    tags:
        - fast-shells
    stage: build
    script:
        - docker build --rm -t ${REPO}:doxygen-20.04 ./doxygen/20.04/
        - docker push ${REPO}:doxygen-20.04

tee-distro-dev-x64_20.04:
    tags:
        - fast-shells
    stage: build
    script:
        - docker build --build-arg DEBUG_DATE=$(date +%s) --rm -t ${REPO}:x64-20.04 ./x64/20.04/
        - docker push ${REPO}:x64-20.04

tee-distro-dev-x64_22.04:
    tags:
        - fast-shells
    stage: build
    script:
        - docker build --build-arg DEBUG_DATE=$(date +%s) --rm -t ${REPO}:x64-22.04 ./x64/22.04/
        - docker push ${REPO}:x64-22.04

tee-distro-dev-arm64_20.04:
    tags:
        - fast-shells
    stage: build
    script:
        - docker build --build-arg DEBUG_DATE=$(date +%s) --build-arg
            TOOLCHAIN_VERSION=3.10.0 --rm -t ${REPO}:arm64-20.04 ./arm64/20.04/
        - docker push ${REPO}:arm64-20.04

tee-distro-dev-arm64_22.04:
    tags:
        - fast-shells
    stage: build
    script:
        - docker build --build-arg DEBUG_DATE=$(date +%s) --build-arg
            TOOLCHAIN_VERSION=3.10.0 --rm -t ${REPO}:arm64-22.04 ./arm64/22.04/
        - docker push ${REPO}:arm64-22.04

tee-distro-dev-riscv_20.04:
    tags:
        - fast-shells
    stage: build
    script:
        - docker build --build-arg DEBUG_DATE=$(date +%s) --rm -t ${REPO}:riscv-20.04 ./riscv/20.04/
        - docker push ${REPO}:riscv-20.04

tee-distro-dev-riscv_22.04:
    tags:
        - fast-shells
    stage: build
    script:
        - docker build --build-arg DEBUG_DATE=$(date +%s) --rm -t ${REPO}:riscv-22.04 ./riscv/22.04/
        - docker push ${REPO}:riscv-22.04

trigger_docker-tee-dev:
    variables:
        TOKEN: b2479a40cb31d0f4158592eb7ef4f3
    stage: trigger
    tags:
        - fast-shells
    script:
        - curl -X POST --fail -F token=${TOKEN} -F ref=main -k
          https://192.168.100.100/api/v4/projects/131/trigger/pipeline


